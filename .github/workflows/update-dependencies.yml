# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

# This workflow will periodically check .NET nanoFramework dependencies and updates them in the repository it's running.

name: Daily update dependencies

on:
  schedule:
  # Update daily at 00:00 UTC
  - cron:  '0 0 * * *'
  repository_dispatch:
    types: update-dependencies

defaults:
  run:
    shell: pwsh

jobs:
  update-dotnet-preview:
    name: Update .NET nanoFramework dependencies
    timeout-minutes: 60 # Non default as Samples has lots of things to update!
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: main
      - name: Checkout tools repo
        uses: actions/checkout@v2
        with:
          repository: nanoframework/nf-tools
          path: tools
      - name: Update dependencies
        run: ./github-actions/update-nf-dependencies.ps1 -targetPath samples
        working-directory: tools
      - name: Install build components for nanoFramework
        run: ./github-actions/install-nf-build-components.ps1
        working-directory: tools
      - name: Setup MSBuild Path
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Build all sample programs
        run: |
          # find every solution file in the samples repository
          $solutionFiles = (Get-ChildItem -Path "samples" -Include "*.sln"  -Recurse)
          foreach ($solutionFile in $solutionFiles)
          {
            msbuild ${{ $solutionFile }} /p:Configuration="Release"
          }
        working-directory: main
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        if: env.CREATE_PR == 'true'
        with:
          title: '${{ env.PR_TITLE }}'
          body: |
            ${{ env.PR_MESSAGE }}
            
            [version update]
            
            ### :warning: This is an automated update. :warning:
          committer: 'nfbot <dependencybot@nanoframework.net>'
          branch: ${{ env.BRANCH_NAME }}
          path: main
          labels: |
            Type: dependencies
